1. Create 5 Users

    User.create(first_name: "Steven", last_name: "Torrence", email_address: "steven@torrence.com")
    User.create(first_name: "Derek", last_name: "Han", email_address: "derek@han.com")
    User.create(first_name: "Casey", last_name: "Tingzong", email_address: "casey@tingzong.com")
    User.create(first_name: "Jeff", last_name: "Wei", email_address: "jeff@wei.com")
    User.create(first_name: "Brandon", last_name: "Lu", email_address: "brandon@lu.com")

2. Create 5 Blogs
    
    Blog.create(name: "Blog 1", description: "This is the first blog.")
    Blog.create(name: "Blog 2", description: "This is the second blog.")
    Blog.create(name: "Blog 3", description: "This is the third blog.")
    Blog.create(name: "Blog 4", description: "This is the fourth blog.")
    Blog.create(name: "Blog 5", description: "This is the fifth blog.")

3. Have the first three blogs be owned by the first User
    
    Owner.create(user: User.first, blog: Blog.first)
    Owner.create(user: User.first, blog: Blog.second)
    Owner.create(user: User.first, blog: Blog.third)

4. Have the fourth blog you created be owned by the second user
    
    Owner.create(user: User.second, blog: Blog.find(4))

5. Have the fifth blog you created be owned by the last user
    
    Owner.create(user: User.last, blog: Blog.last)

6. Have the third user own all of the blogs that were created
    
    Owner.create(user: User.third, blog: Blog.find(1))
    Owner.create(user: User.third, blog: Blog.find(2))
    Owner.create(user: User.third, blog: Blog.find(3))
    Owner.create(user: User.third, blog: Blog.find(4))
    Owner.create(user: User.third, blog: Blog.find(5))

7. Have the first user create 3 posts for the blog with an id of 2. Remember that you shouldn't do Post.create(user: User.first, blog_id: 2) but more like Post.create(user: User.first, blog: Blog.find(2)). Again, you should never reference the foreign key in Rails.

    Post.create(title: "First Post", content: "This is my first post", user: User.first, blog: Blog.find(2))

8. Have the second user create 5 posts for the last blog

    Post.create(title: "First Post", content: "This is my first post", user: User.second, blog: Blog.last)
    Post.create(title: "Second Post", content: "This is my second post", user: User.second, blog: Blog.last)
    Post.create(title: "Third Post", content: "This is my third post", user: User.second, blog: Blog.last)
    Post.create(title: "Fourth Post", content: "This is my fourth post", user: User.second, blog: Blog.last)
    Post.create(title: "Fifth Post", content: "This is my fifth post", user: User.second, blog: Blog.last)

9. Have the third user create several posts for different blogs

    Post.create(title: "Favorite Band", content: "My favorite band is 311", user: User.third, blog: Blog.first)
    Post.create(title: "Favorite Band", content: "My favorite band is Eve 6", user: User.third, blog: Blog.second)
    Post.create(title: "Favorite Band", content: "My favorite band is 3 Doors Down", user: User.third, blog: Blog.third)
    Post.create(title: "Favorite Band", content: "My favorite band is Nickelback", user: User.third, blog: Blog.fourth)
    Post.create(title: "Favorite Band", content: "My favorite band is Rammstein", user: User.third, blog: Blog.fifth)

10. Have the third user create two messages for the first post and three messages for the second post

    Message.create(author: "User 3", message: "This is a message for the first post", user: User.third, post: Post.first)
    Message.create(author: "User 3", message: "This is ANOTHER message for the first post", user: User.third, post: Post.first)
    Message.create(author: "User 3", message: "This is a message for the second post", user: User.third, post: Post.second)
    Message.create(author: "User 3", message: "This is ANOTHER message for the second post", user: User.third, post: Post.second)
    Message.create(author: "User 3", message: "This is YET ANOTHER message for the second post", user: User.third, post: Post.second)

11. Have the fourth user create 3 messages for the last post you created

    Message.create(author: "User 4", message: "My favorite programming language is Ruby", user: User.fourth, post: Post.last)
    Message.create(author: "User 4", message: "My favorite programming language is Python", user: User.fourth, post: Post.last)
    Message.create(author: "User 4", message: "My favorite programming language is JavaScript", user: User.fourth, post: Post.last)
    
    
12. Change the owner of the second post to the last user

    Post.find(2).update(user: User.last)

13. Change the second post's content to be something else 

    Post.second.update(content: "This is the updated content")

14. Retrieve all blogs owned by the third user (make this work by simply doing: User.find(3).blogs)

    I needed to add "has_many :owners" to the user model for this to work
    User.find(3).blogs

15. Retrieve all posts that were created by the third user

    User.find(3).posts

16. Retrieve all messages left by the third user

    User.find(3).messages
    Message.where(user: User.third)

17. Retrieve all posts associated with the blog id 5 as well as who left these posts

    Blog.find(5).posts # This query finds all of the posts associated with the 5th blog
    Post.joins(:user).where(blog: Blog.find(5)).select("users.id, users.first_name, users.last_name")

18. Retrieve all messages associated with the blog id 5 along with all the user information of those who left the messages

    posts = Blog.find(5).posts
    Message.joins(:user).where(post: posts).select("message, users.id, users.first_name, users.last_name")

19. Grab all user information of those that own the first blog (make this work by allowing Blog.first.owners to work)

    Blog.first.owners

20. Change it so that the first blog is no longer owned by the first user

    Owner.first.destroy